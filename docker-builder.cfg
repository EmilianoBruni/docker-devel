# generate files with: $ docker-builder -u -f=docker-builder.cfg
# build image with $ docker-builder -b -f=docker-builder.cfg

my $project = 'devel';
my $title   = "docker-$project";
my $version = '1.3';

{
    docker => {
        buildkit => 1,
        from     => "alpine:3.14",
        project  => $project,
        image    => "ebruni/$project",
        history  => [
            {
                date    => '2021-09-29',
                version => '1.3',
                comment => 'Add Autoprereqs, Prereqs, PkgVersion'
            },
            {
                date    => '2021-09-06',
                version => '1.2',
                comment => 'Add MinimumPerl to Dist::Zilla'
            },
            {
                date    => '2021-08-29',
                version => '1.1',
                comment => 'Add Data::Printer'
            },
            {
                date    => '2021-08-26',
                version => '1.0',
                comment => 'Initial Version'
            },
        ],
    },
    git => {
        repo => "https://github.com/EmilianoBruni/$title",
    },
    global => {
        author =>
          { name => 'Emiliano Bruni', mail => 'info@ebruni.it', abbr => 'EB' },


        title       => $title,
        description => q{a platform to develop
        [Perl](https://www.perl.org) apps.} =~ s/\s{8}//gmr,
        app_folder  => '/usr/src',
        publish     => '3000 8080',
        os_packages => [
            qw/make gcc perl-dev perl-app-cpanminus
              perl-module-build perl-namespace-clean perl-boolean
              perl-json-maybexs perl-test-fatal perl-path-tiny perl-moo
              perl-file-find-rule perl-number-compare perl-text-glob
              musl-dev openssl openssl-dev zlib-dev git
              /
        ],
        os_packages_clear => [
            qw/
            /
        ],
        license      => 'Artistic-2.0',
        perl_modules => [qw/Data::Printer/],
        versions     => [$version],
    },
    releases => {
        main => {
            versions => [ $version, 'latest' ],
        },
        dzil => {
            packages          => [qw/musl-dev g++/],
            os_packages_clear => [
                qw/
                /
            ],
            perl_modules => [
                qw/
                  Dist::Zilla
                  Dist::Zilla::Plugin::ChangelogFromGit::CPAN::Changes
                  Dist::Zilla::Plugin::GithubMeta
                  Dist::Zilla::Plugin::MinimumPerlFast
                  Dist::Zilla::Plugin::MinimumPerl
                  Dist::Zilla::Plugin::PodWeaver
                  Dist::Zilla::Plugin::ReadmeAnyFromPod
                  Dist::Zilla::Plugin::Regenerate::AfterReleasers
                  Dist::Zilla::PluginBundle::Starter::Git
                  Dist::Zilla::Plugin::AutoPrereqs
                  Dist::Zilla::Plugin::PkgVersion
                  Dist::Zilla::Plugin::Prereqs
                  Software::License::Perl_5
                  /
            ],
            versions => [ $version . '-dzil', 'dzil' ],
        },
    },
    templates => [
        {
            source => 'dockerfile.ep',
            target => 'Dockerfile'
        },
    ],
};
